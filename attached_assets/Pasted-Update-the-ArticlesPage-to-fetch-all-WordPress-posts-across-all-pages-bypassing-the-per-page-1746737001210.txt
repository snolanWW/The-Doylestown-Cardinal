Update the `ArticlesPage` to fetch **all WordPress posts** across all pages, bypassing the `per_page=100` limit, and combine them into a single array for display.

---

### ✅ Requirements

1. **Replace the current ****`fetch()`**** logic**

   * Instead of a single call to:

     ```
     /wp-json/wp/v2/posts?_embed=true&per_page=100
     ```
   * Use a **loop or recursive function** to call:

     ```
     /wp-json/wp/v2/posts?_embed=true&per_page=100&page=1
     /wp-json/wp/v2/posts?_embed=true&per_page=100&page=2
     ...
     ```
   * Stop fetching when the response array is empty.

---

### ✅ Steps to implement

1. Create an **async function** called `fetchAllPosts`:

   * Initialize `page = 1` and an empty `allPosts` array.
   * Use a `while` loop:

     * Fetch posts for the current page.
     * If the response is empty (`data.length === 0`), break the loop.
     * Otherwise, add the posts to `allPosts` and increment the page.

2. Inside the `useEffect()`, call:

   ```js
   fetchAllPosts()
     .then((allPosts) => {
       const mappedArticles = allPosts.map((post) => ({
         id: post.id,
         slug: post.slug,
         title: post.title.rendered,
         excerpt: post.excerpt.rendered,
         category: post._embedded['wp:term'][0][0]?.name || 'Uncategorized',
         author: post._embedded['author'][0]?.name || 'Unknown',
         date: new Date(post.date).toLocaleDateString(),
         image: post._embedded['wp:featuredmedia']?.[0]?.source_url || '',
         tags: post._embedded['wp:term'][1]?.map((tag) => tag.name) || [],
       }));
       setArticles(mappedArticles);
       setIsLoading(false);
     })
     .catch((error) => {
       console.error('Error loading articles:', error);
       setError('Failed to load articles. Please try again later.');
       setIsLoading(false);
     });
   ```

---

### ✅ Example `fetchAllPosts` function

```js
async function fetchAllPosts() {
  let allPosts = [];
  let page = 1;
  let keepFetching = true;

  while (keepFetching) {
    const response = await fetch(`https://doylestowncardinal.com/wp-json/wp/v2/posts?_embed=true&per_page=100&page=${page}`);
    const data = await response.json();

    if (data.length === 0) {
      keepFetching = false;
    } else {
      allPosts = [...allPosts, ...data];
      page++;
    }
  }

  return allPosts;
}
```

---

### ✅ Final check

* Confirm all articles across pages are loaded.
* Confirm no duplicate posts.
* Confirm category filters and search still work.
* Optionally log `allPosts.length` to the console to check total.

---

### ✨ Bonus (optional)

* Add a loading spinner or progress bar.
* Show a message like “Loaded 350 articles” on the page.
* Cache results in local storage or session storage for performance.
