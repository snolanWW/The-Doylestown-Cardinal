## Fix Author Resolution on Article Page Using Content Scan

Here‚Äôs a complete fix that works with your current data structure:

---

### ‚ú≥Ô∏è Step 1: Scan Article Content for Author (When It‚Äôs "Staff")

Update your `useEffect()` logic in `ArticlePage.tsx` like this:

```tsx
useEffect(() => {
  const fetchLocalArticle = async () => {
    try {
      const response = await fetch(`/data/articles/${slug}.json`);
      if (!response.ok) {
        throw new Error("Article not found");
      }
      const data = await response.json();

      let resolvedAuthor = data.author;

      // If author is "Staff", scan first 1000 characters of content for known names
      if (resolvedAuthor === "Staff") {
        const lowerContent = data.content.toLowerCase();
        const match = Object.keys(writerDirectory).find(name =>
          lowerContent.includes(name.toLowerCase())
        );
        if (match) {
          resolvedAuthor = match;
        }
      }

      setArticle({
        title: data.title,
        content: data.content,
        excerpt: data.excerpt,
        date: new Date(data.date).toLocaleDateString(),
        author: resolvedAuthor,
        image: data.thumbnail || '/images/article-placeholder.jpg',
      });
    } catch (err) {
      setError("Failed to load article. Please try again later.");
      console.error("Error loading local article:", err);
    } finally {
      setIsLoading(false);
    }
  };

  fetchLocalArticle();
}, [slug]);
```

---

### ‚ú≥Ô∏è Step 2: Render Author Link Conditionally

In the JSX (already present in your file), confirm this logic:

```tsx
<div className="flex items-center text-charcoal-gray/60 mb-8">
  {article.author && writerDirectory[article.author] ? (
    <Link
      to={`/writer/${writerDirectory[article.author]}`}
      className="text-cardinal-red hover:text-forest-green font-semibold"
    >
      {article.author}
    </Link>
  ) : (
    <span>{article.author || "Staff"}</span>
  )}
  <span className="mx-2">‚Ä¢</span>
  <span>{article.date}</span>
</div>
```

---

## ‚úÖ Summary

* üîç The `"Staff"` problem is caused by the JSON having `author: "Staff"` even though a real name is in the content.
* üõ†Ô∏è We fix that by scanning the content and checking against `writerDirectory`.
* ‚úÖ Now author names are auto-detected and linked properly.
